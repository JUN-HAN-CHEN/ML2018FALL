import pandas as pd
import sys
import numpy as np
def ReadTestData(filename):
    raw_data = pd.read_csv(filename, header=None, encoding='big5').values
    data = raw_data[:, 2:]
    data[data == 'NR'] = 0.0
    data = data.astype('float')

    obs = np.vsplit(data, data.shape[0]/18)
    X = []
    for i in obs:
        X.append(i.flatten())

    return np.array(X)

def Write(filename):
    Y_test = pd.read_csv(filename, encoding="big5").iloc[:,:2].rename(index=str, columns={"id_0":"id", "AMB_TEMP":"value"})
    Y_test["value"]=0
    b=pd.DataFrame(Y_test['id'].unique(), columns=["id"])
    c=pd.DataFrame( np.random.randint(low=0,high=1,size=(260,1)),columns=["value"] )
    d=pd.concat([b, c], axis=1)
    return d
def predict(X,W,b): 
    return np.dot(X, W) + b
#My train.csv has been modified by hand and clean.py
X_test = ReadTestData(sys.argv[1])
Y_test = Write(sys.argv[1])
b= 0.01785495036277021
W=[[-4.64219968e-03],
       [-1.54825584e-02],
       [-8.86464332e-04],
       [ 4.93547928e-03],
       [ 7.60847088e-04],
       [-9.54015959e-03],
       [-7.72950934e-03],
       [ 1.47003069e-02],
       [ 5.24072830e-03],
       [-4.35020866e-02],
       [-5.51732600e-02],
       [-6.02510015e-02],
       [-4.78040019e-02],
       [-1.45301415e-02],
       [ 2.92674670e-03],
       [ 2.25049705e-02],
       [ 7.16234197e-02],
       [ 9.82254318e-02],
       [-4.74515324e-02],
       [-6.89209529e-02],
       [-7.85555455e-02],
       [-2.81678622e-02],
       [-7.25949263e-03],
       [ 2.25813093e-02],
       [ 5.75733726e-02],
       [ 1.46956507e-01],
       [ 3.05839263e-01],
       [-3.13717376e-01],
       [-3.95835200e-01],
       [-2.24111108e-01],
       [ 2.76853193e-02],
       [-1.34429885e-01],
       [-1.61617382e-01],
       [-1.90336602e-01],
       [ 1.25733541e-02],
       [ 3.59087405e-01],
       [ 2.40648315e-02],
       [-3.12472262e-02],
       [ 5.78524504e-02],
       [-4.31236574e-02],
       [ 2.36477260e-02],
       [ 1.10982116e-02],
       [-1.12566185e-03],
       [-2.79351095e-02],
       [-1.65975532e-02],
       [ 4.74862709e-03],
       [ 2.71260642e-02],
       [-2.18878264e-02],
       [ 1.46914512e-02],
       [-1.32922732e-02],
       [-3.78425492e-02],
       [-4.27854516e-02],
       [ 2.77468997e-02],
       [ 9.19627216e-02],
       [-1.64914479e-02],
       [ 1.05620477e-02],
       [-2.53076379e-04],
       [-1.34763533e-03],
       [-7.27311223e-03],
       [-3.20955796e-02],
       [-2.57826339e-02],
       [ 6.98606803e-03],
       [ 6.30311190e-02],
       [-5.95943218e-03],
       [ 1.36962512e-02],
       [ 1.62855515e-02],
       [-1.19556157e-02],
       [-2.72626093e-02],
       [-4.06013545e-02],
       [-2.20403434e-02],
       [ 9.82044277e-03],
       [ 7.72467382e-02],
       [-6.18539579e-03],
       [ 8.11057373e-04],
       [-8.28366028e-03],
       [-1.37470019e-02],
       [ 1.12040961e-03],
       [ 1.19725605e-02],
       [-4.76679799e-02],
       [-3.34177030e-02],
       [ 1.45376410e-01],
       [ 2.49442335e-02],
       [ 5.16021904e-03],
       [ 1.70196708e-02],
       [-6.32037698e-02],
       [ 5.43195213e-02],
       [ 2.26484932e-01],
       [-3.30902426e-01],
       [ 4.75583901e-02],
       [ 8.79689266e-01],
       [-4.36130841e-02],
       [-1.27856355e-02],
       [-1.64550799e-02],
       [ 2.63396409e-02],
       [ 1.50696676e-02],
       [-3.85219281e-02],
       [-4.18831407e-02],
       [-5.68340193e-02],
       [-6.05889255e-02],
       [-9.06138386e-03],
       [-5.90923416e-03],
       [-8.49381962e-03],
       [-1.78965620e-02],
       [-1.28540696e-02],
       [-5.35270129e-03],
       [ 3.62466100e-03],
       [-7.81367957e-03],
       [ 5.13651874e-02],
       [ 9.35194503e-02],
       [-5.76734405e-03],
       [-6.23111579e-02],
       [ 5.31265951e-02],
       [ 6.35398191e-02],
       [-1.17249722e-01],
       [-1.19609549e-01],
       [ 1.79188419e-02],
       [ 2.79945359e-01],
       [-3.30392949e-02],
       [-2.58473772e-02],
       [-2.43434283e-02],
       [ 1.61184383e-02],
       [ 2.40113578e-02],
       [ 4.03702703e-02],
       [ 6.39105187e-02],
       [ 1.32997563e-01],
       [ 1.74339382e-01],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00],
       [ 0.00000000e+00]]
end = predict(X_test,W,b)
Y_test.value=end
Y_test.to_csv(sys.argv[2],index=False)
